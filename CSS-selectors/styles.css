/* 1. SIMPLE CSS SELECTORS */

/* a)Universal selector */

/* (To use the universal selector, use the asterisk character, * ) */

* {
  /* property: value; */
  padding: 0;
  margin: 0;
}

/* You can use the universal selector to reset the browser's default padding and margin to zero at the top of the file before you add any other styles: */

/* b) Type selector */

/* The Type selector will select the elements of the same element type provided */

p {
  /* property: value */
}

/* Here it will select all the <p> elements in the HTML document */

/* c) Class selector */

/* This selector selects and styles all multiple elements with the matching classname provided */

.pointer {
  /* property: value */
}

/* Here it will select all the elements with "pointer" as class in the HTML document */

/* Classes are reusable, making them a good option for practicing DRY development. DRY is a programming principle and is short for 'Don't Repeat Yourself'. As the name suggests, the aim is to avoid writing repetitive code whenever possible. */

/* d) ID selector */

/* This selector selects and styles a single element with the matching ID provided */

#small {
  /* property: value */
}

/* Here it will select the element with "small" as ID in the HTML document */
/* ------------------------------------------------------------------------------------------------ */

/* 2. CSS ATTRIBUTE SELECTORS */

/* Many HTML elements have attributes. */

/* HTML attributes:

 - Provide additional information about HTML elements.
 - Are always specified in the start (or opening) tag.
 - Usually come in name/value pairs such as name="value".
 - The value in a name/value pair should be enclosed in quotation marks. */

/* THE ATTRIBUTE SELECTOR TARGETS AND SELECTS ELEMENTS WITH THE MATCHING ATTRIBUTE AND VALUE */

/* There are different types of attribute selectors.

Below are some of the most common attribute selectors. */

/* a) The [attribute] Selector */

/* This selector will get the elements which had the specified attribute, IRRESPECTIVE OF THE VALUE */

a[attr] {
  /* property: value; */
}

/* Here the anchor elements with the attr attribute are selected */

/* Tobe more specific, we can provide the value for this attribute and get the anchor element with the matching attribute name and matching value */

a[attr="1"] {
  /* property: value; */
}

/* Here the anchor elements with the attr attribute and with a value 1 are selected */
/* -------------------------------------------------- */

/* We can also select the element with different filters on the value of it's attribute as follows: */

/* The [attribute^="value"] Selector */

/* This syntax will select the element with specified attribute and a value starting with a specific character */

a[attr^="www"] {
  /* property: value; */
}

/* The code above selects any a elements where the attr attribute name has a value that starts with www. */
/* -------------------------------------------------- */

/* The [attribute$="value"] Selector */

/* You could also specify that the value of the attribute ends with a specific */

/* For example, if you wanted to select a elements that have an attr attribute name with a value that ends with .com, you would do the following: */

a[attr$=".com"] {
  /* property: value; */
}
/* -------------------------------------------------- */
/* The [attribute*="value"] Selector */

/* You can also specify that the attribute value contains a specific substring - this selector is known as the Attribute Contains Substring Selector and has the following syntax: */

/* For example, if you wanted to select a elements that have an attr attribute with a value that contains the string free, you would do the following:
*/
a[attr*="free"] {
  /* property: value; */
}

/* -------------------------------------------------- */

/* The [attribute~="value"] Selector */

/* You can also specify that the selector matches an attribute value that contains a whole word using the following syntax: */

/* In this case, the string value needs to be a whole word. */

/* For example, if you wanted to select a elements that have an attr attribute name with a value that contains the word free, you would do the following: */

a[attr~="free"] {
  property: value;
}
/* The code above would match an attr attribute with a value of free that contains different kinds of whitespace. */
